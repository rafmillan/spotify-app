{"ast":null,"code":"var _jsxFileName = \"/Users/rafmillan/react/spotify-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ListView from \"./TopList\";\nimport ImageGrid from \"./ImageGrid\";\nimport \"../styles/Dashboard.css\";\nimport { fetchTopSongs, fetchUser, fetchTopArtists } from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst count = 10;\nconst defaultUser = {\n  display_name: \"default\"\n};\nconst defaultSongs = [];\nconst defaultArtists = [];\nconst defaultImage = \"https://images.unsplash.com/photo-1589251204996-3367cc27f084?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8c3F1YXJlJTIwaW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\";\nfunction getTimeRange(index) {\n  let term = \"short_term\";\n  if (index === undefined) {\n    index = 0;\n  }\n  switch (index) {\n    case 1:\n      term = \"medium_term\";\n      break;\n    case 2:\n      term = \"long_term\";\n      break;\n    default:\n      term = \"short_term\";\n      break;\n  }\n  console.log(\"changing to \" + term);\n  return term;\n}\nfunction getAlbumArtWork(songs) {\n  console.log(songs);\n}\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    token\n  } = _ref;\n  const [user, setUser] = useState(defaultUser);\n  const [topSongs, setTopSongs] = useState(defaultSongs);\n  const [topArtists, setTopArtists] = useState(defaultArtists);\n  const [timeRange, setTimeRange] = useState(getTimeRange());\n  function handleButtonClick(index) {\n    setTimeRange(getTimeRange(index));\n  }\n  useEffect(() => {\n    if (!token) {\n      console.log(\"no token!\");\n      return;\n    }\n    const fetchData = async () => {\n      const [userData, topSongsData, topArtistsData] = await Promise.all([fetchUser(token), fetchTopSongs(token, count, timeRange), fetchTopArtists(token, count, timeRange)]);\n      setUser(userData);\n      setTopSongs(topSongsData);\n      setTopArtists(topArtistsData);\n    };\n    fetchData();\n  }, [token, timeRange]);\n  getAlbumArtWork(topSongs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"welcome, \", user.display_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"visualize your music taste using AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListView, {\n        title: \"your top artists\",\n        list: topArtists,\n        image: user.images ? user.images[0].url : defaultImage,\n        buttonHandler: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        images: topSongs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"BORk0KpdcfOkA0Gf0UjCWq06VzM=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","ListView","ImageGrid","fetchTopSongs","fetchUser","fetchTopArtists","jsxDEV","_jsxDEV","count","defaultUser","display_name","defaultSongs","defaultArtists","defaultImage","getTimeRange","index","term","undefined","console","log","getAlbumArtWork","songs","Dashboard","_ref","_s","token","user","setUser","topSongs","setTopSongs","topArtists","setTopArtists","timeRange","setTimeRange","handleButtonClick","fetchData","userData","topSongsData","topArtistsData","Promise","all","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","list","image","images","url","buttonHandler","_c","$RefreshReg$"],"sources":["/Users/rafmillan/react/spotify-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListView from \"./TopList\";\nimport ImageGrid from \"./ImageGrid\";\nimport \"../styles/Dashboard.css\";\n\nimport { fetchTopSongs, fetchUser, fetchTopArtists} from \"../Api\";\n\nconst count = 10;\nconst defaultUser = { display_name: \"default\" };\nconst defaultSongs = [];\nconst defaultArtists = []\nconst defaultImage =\n    \"https://images.unsplash.com/photo-1589251204996-3367cc27f084?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8c3F1YXJlJTIwaW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\";\n\nfunction getTimeRange(index) {\n    let term = \"short_term\";\n    if (index === undefined) {\n        index = 0;\n    }\n    switch (index) {\n        case 1:\n            term = \"medium_term\";\n            break;\n        case 2:\n            term = \"long_term\";\n            break;\n        default:\n            term = \"short_term\";\n            break;\n    }\n    console.log(\"changing to \" + term);\n    return term;\n}\n\nfunction getAlbumArtWork(songs) {\n    console.log(songs);\n}\n\nexport default function Dashboard({ token }) {\n    const [user, setUser] = useState(defaultUser);\n    const [topSongs, setTopSongs] = useState(defaultSongs);\n    const [topArtists, setTopArtists] = useState(defaultArtists);\n    const [timeRange, setTimeRange] = useState(getTimeRange());\n\n    function handleButtonClick(index) {\n        setTimeRange(getTimeRange(index));\n    }\n\n    useEffect(() => {\n        if (!token) {\n            console.log(\"no token!\")\n            return;\n          }\n        \n          const fetchData = async () => {\n            const [userData, topSongsData, topArtistsData] = await Promise.all([\n              fetchUser(token),\n              fetchTopSongs(token, count, timeRange),\n              fetchTopArtists(token, count, timeRange)\n            ]);\n        \n            setUser(userData);\n            setTopSongs(topSongsData);\n            setTopArtists(topArtistsData)\n          };\n        \n          fetchData();\n    }, [token, timeRange])\n\n    getAlbumArtWork(topSongs)\n\n    return (\n        <div>\n            <nav className=\"container\">\n                <h3>welcome, {user.display_name}</h3>\n                <h4>visualize your music taste using AI</h4>\n                <ListView\n                    title=\"your top artists\"\n                    list={topArtists}\n                    image={user.images ? user.images[0].url : defaultImage}\n                    buttonHandler={handleButtonClick}\n                />\n                <ImageGrid \n                    images={topSongs}    \n                />\n            </nav>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}