{"ast":null,"code":"var _jsxFileName = \"/Users/rafmillan/react/spotify-app/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ListView from \"./TopList\";\nimport ImageGrid from \"./ImageGrid\";\nimport \"../styles/Dashboard.css\";\nimport { fetchTopSongs, fetchUser, fetchTopArtists } from \"../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artistCount = 10;\nconst songCount = 12;\nconst defaultUser = {\n  display_name: \"default\"\n};\nconst defaultSongs = [];\nconst defaultArtists = [];\nconst defaultImage = \"https://images.unsplash.com/photo-1589251204996-3367cc27f084?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8c3F1YXJlJTIwaW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\";\nfunction getTimeRange(index) {\n  let term = \"short_term\";\n  if (index === undefined) {\n    index = 0;\n  }\n  switch (index) {\n    case 1:\n      term = \"medium_term\";\n      break;\n    case 2:\n      term = \"long_term\";\n      break;\n    default:\n      term = \"short_term\";\n      break;\n  }\n  console.log(\"changing to \" + term);\n  return term;\n}\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    token\n  } = _ref;\n  const [user, setUser] = useState(defaultUser);\n  const [topSongs, setTopSongs] = useState(defaultSongs);\n  const [topArtists, setTopArtists] = useState(defaultArtists);\n  const [timeRangeSongs, setTimeRangeSongs] = useState(getTimeRange());\n  const [timeRangeArtists, setTimeRangeArtists] = useState(getTimeRange());\n  function handleSongsClick(index) {\n    setTimeRangeSongs(getTimeRange(index));\n  }\n  function handleArtistsClick(index) {\n    setTimeRangeArtists(getTimeRange(index));\n  }\n  useEffect(() => {\n    if (!token) {\n      console.log(\"no token!\");\n      return;\n    }\n    const fetchData = async () => {\n      const [userData, topSongsData, topArtistsData] = await Promise.all([fetchUser(token), fetchTopSongs(token, songCount, timeRangeSongs), fetchTopArtists(token, artistCount, timeRangeArtists)]);\n      setUser(userData);\n      setTopSongs(topSongsData);\n      setTopArtists(topArtistsData);\n    };\n    fetchData();\n  }, [token, timeRangeSongs, timeRangeArtists]);\n  getAlbumArtWork(topSongs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"welcome, \", user.display_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"visualize your music taste using AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListView, {\n        title: \"your top artists\",\n        list: topArtists,\n        image: user.images ? user.images[0].url : defaultImage,\n        buttonHandler: handleArtistsClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        title: \"your favourites\",\n        songs: topSongs,\n        buttonHandler: handleSongsClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"IvBcRVuSC/ZbjQfgshJZ6DvobYk=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","ListView","ImageGrid","fetchTopSongs","fetchUser","fetchTopArtists","jsxDEV","_jsxDEV","artistCount","songCount","defaultUser","display_name","defaultSongs","defaultArtists","defaultImage","getTimeRange","index","term","undefined","console","log","Dashboard","_ref","_s","token","user","setUser","topSongs","setTopSongs","topArtists","setTopArtists","timeRangeSongs","setTimeRangeSongs","timeRangeArtists","setTimeRangeArtists","handleSongsClick","handleArtistsClick","fetchData","userData","topSongsData","topArtistsData","Promise","all","getAlbumArtWork","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","list","image","images","url","buttonHandler","songs","_c","$RefreshReg$"],"sources":["/Users/rafmillan/react/spotify-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListView from \"./TopList\";\nimport ImageGrid from \"./ImageGrid\";\nimport \"../styles/Dashboard.css\";\n\nimport { fetchTopSongs, fetchUser, fetchTopArtists} from \"../Api\";\n\nconst artistCount = 10;\nconst songCount = 12;\nconst defaultUser = { display_name: \"default\" };\nconst defaultSongs = [];\nconst defaultArtists = []\nconst defaultImage =\n    \"https://images.unsplash.com/photo-1589251204996-3367cc27f084?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8c3F1YXJlJTIwaW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\";\n\nfunction getTimeRange(index) {\n    let term = \"short_term\";\n    if (index === undefined) {\n        index = 0;\n    }\n    switch (index) {\n        case 1:\n            term = \"medium_term\";\n            break;\n        case 2:\n            term = \"long_term\";\n            break;\n        default:\n            term = \"short_term\";\n            break;\n    }\n    console.log(\"changing to \" + term);\n    return term;\n}\n\nexport default function Dashboard({ token }) {\n    const [user, setUser] = useState(defaultUser);\n    const [topSongs, setTopSongs] = useState(defaultSongs);\n    const [topArtists, setTopArtists] = useState(defaultArtists);\n    const [timeRangeSongs, setTimeRangeSongs] = useState(getTimeRange());\n    const [timeRangeArtists, setTimeRangeArtists] = useState(getTimeRange());\n\n    function handleSongsClick(index) {\n        setTimeRangeSongs(getTimeRange(index));\n    }\n\n    function handleArtistsClick(index) {\n        setTimeRangeArtists(getTimeRange(index));\n    }\n\n    useEffect(() => {\n        if (!token) {\n            console.log(\"no token!\")\n            return;\n          }\n        \n          const fetchData = async () => {\n            const [userData, topSongsData, topArtistsData] = await Promise.all([\n              fetchUser(token),\n              fetchTopSongs(token, songCount, timeRangeSongs),\n              fetchTopArtists(token, artistCount, timeRangeArtists)\n            ]);\n        \n            setUser(userData);\n            setTopSongs(topSongsData);\n            setTopArtists(topArtistsData)\n          };\n        \n          fetchData();\n    }, [token, timeRangeSongs, timeRangeArtists])\n\n    getAlbumArtWork(topSongs)\n\n    return (\n        <div>\n            <nav className=\"container\">\n                <h3>welcome, {user.display_name}</h3>\n                <h4>visualize your music taste using AI</h4>\n                <ListView\n                    title=\"your top artists\"\n                    list={topArtists}\n                    image={user.images ? user.images[0].url : defaultImage}\n                    buttonHandler={handleArtistsClick}\n                />\n                <ImageGrid\n                    title=\"your favourites\"\n                    songs={topSongs}\n                    buttonHandler={handleSongsClick}\n                />\n            </nav>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}