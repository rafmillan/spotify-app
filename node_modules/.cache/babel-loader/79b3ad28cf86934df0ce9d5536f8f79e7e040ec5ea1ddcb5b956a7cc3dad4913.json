{"ast":null,"code":"var _jsxFileName = \"/Users/rafmillan/react/spotify-app/src/components/ImageGrid.js\";\nimport React from \"react\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport \"../styles/ImageGrid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGrid = _ref => {\n  let {\n    title,\n    images,\n    buttonHandler\n  } = _ref;\n  const buttons = [{\n    label: \"short term\"\n  }, {\n    label: \"medium term\"\n  }, {\n    label: \"long term\"\n  }];\n  function handleButtonClick(button) {\n    buttonHandler(button);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"grid-view-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        buttons: buttons,\n        onButtonClick: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: image.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = ImageGrid;\nexport default ImageGrid;\nvar _c;\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"names":["React","ButtonGroup","jsxDEV","_jsxDEV","ImageGrid","_ref","title","images","buttonHandler","buttons","label","handleButtonClick","button","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onButtonClick","map","image","index","src","url","alt","_c","$RefreshReg$"],"sources":["/Users/rafmillan/react/spotify-app/src/components/ImageGrid.js"],"sourcesContent":["import React from \"react\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport \"../styles/ImageGrid.css\"\n\nconst ImageGrid = ({ title, images , buttonHandler}) => {\n    const buttons = [\n        { label: \"short term\" },\n        { label: \"medium term\" },\n        { label: \"long term\" },\n    ];\n\n    function handleButtonClick(button) {\n        buttonHandler(button)\n    }\n    \n    return (\n        <div>\n            <h5 className=\"grid-view-title\">{title}</h5>\n            <div className=\"button\">\n                <ButtonGroup buttons={buttons} onButtonClick={handleButtonClick} />\n            </div>\n            <div className=\"image-grid\">\n            {images.map((image, index) => (\n                <div className=\"image\" key={index}>\n                    <img src={image.url} alt={image.url} />\n                    <div className=\"image-overlay\">\n                        <p>{image.title}</p>\n                    </div>\n                </div>\n            ))}\n        </div>\n        </div>\n    );\n};\n\nexport default ImageGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,KAAK;IAAEC,MAAM;IAAGC;EAAa,CAAC,GAAAH,IAAA;EAC/C,MAAMI,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE;EAAa,CAAC,EACvB;IAAEA,KAAK,EAAE;EAAc,CAAC,EACxB;IAAEA,KAAK,EAAE;EAAY,CAAC,CACzB;EAED,SAASC,iBAAiBA,CAACC,MAAM,EAAE;IAC/BJ,aAAa,CAACI,MAAM,CAAC;EACzB;EAEA,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAIW,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAEP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC5Cf,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACnBV,OAAA,CAACF,WAAW;QAACQ,OAAO,EAAEA,OAAQ;QAACU,aAAa,EAAER;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,eACNf,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAD,QAAA,EAC1BN,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBnB,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAD,QAAA,gBAClBV,OAAA;UAAKoB,GAAG,EAAEF,KAAK,CAACG,GAAI;UAACC,GAAG,EAAEJ,KAAK,CAACG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACvCf,OAAA;UAAKW,SAAS,EAAC,eAAe;UAAAD,QAAA,eAC1BV,OAAA;YAAAU,QAAA,EAAIQ,KAAK,CAACf;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClB;MAAA,GAJkBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAACQ,EAAA,GA7BItB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}