{"ast":null,"code":"var _jsxFileName = \"/Users/rafmillan/react/spotify-app/src/components/ImageGrid.js\";\nimport React from \"react\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport \"../styles/ImageGrid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getAlbumArtWork(song) {\n  return song.album.images[1].url;\n}\nconst ImageGrid = _ref => {\n  let {\n    title,\n    songs,\n    buttonHandler\n  } = _ref;\n  const buttons = [{\n    label: \"short term\"\n  }, {\n    label: \"medium term\"\n  }, {\n    label: \"long term\"\n  }];\n  function handleButtonClick(button) {\n    buttonHandler(button);\n  }\n  let images = getAlbumArtWork(songs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"grid-view-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        buttons: buttons,\n        onButtonClick: handleButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: images.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: image.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-text\",\n          children: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = ImageGrid;\nexport default ImageGrid;\nvar _c;\n$RefreshReg$(_c, \"ImageGrid\");","map":{"version":3,"names":["React","ButtonGroup","jsxDEV","_jsxDEV","getAlbumArtWork","song","album","images","url","ImageGrid","_ref","title","songs","buttonHandler","buttons","label","handleButtonClick","button","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onButtonClick","map","index","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/rafmillan/react/spotify-app/src/components/ImageGrid.js"],"sourcesContent":["import React from \"react\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport \"../styles/ImageGrid.css\"\n\nfunction getAlbumArtWork(song) {\n    return song.album.images[1].url;\n}\n\nconst ImageGrid = ({ title, songs , buttonHandler}) => {\n    const buttons = [\n        { label: \"short term\" },\n        { label: \"medium term\" },\n        { label: \"long term\" },\n    ];\n\n    function handleButtonClick(button) {\n        buttonHandler(button)\n    }\n\n    let images = getAlbumArtWork(songs);\n    \n    return (\n        <div>\n            <h5 className=\"grid-view-title\">{title}</h5>\n            <div className=\"button\">\n                <ButtonGroup buttons={buttons} onButtonClick={handleButtonClick} />\n            </div>\n            <div className=\"image-grid\">\n            {images.map((song, index) => (\n                <div className=\"image\" key={index}>\n                    <img src={image.url} alt={image.url} />\n                    <div className=\"image-text\">{\"\"}</div>\n                </div>\n            ))}\n        </div>\n        </div>\n    );\n};\n\nexport default ImageGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC3B,OAAOA,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG;AACnC;AAEA,MAAMC,SAAS,GAAGC,IAAA,IAAqC;EAAA,IAApC;IAAEC,KAAK;IAAEC,KAAK;IAAGC;EAAa,CAAC,GAAAH,IAAA;EAC9C,MAAMI,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE;EAAa,CAAC,EACvB;IAAEA,KAAK,EAAE;EAAc,CAAC,EACxB;IAAEA,KAAK,EAAE;EAAY,CAAC,CACzB;EAED,SAASC,iBAAiBA,CAACC,MAAM,EAAE;IAC/BJ,aAAa,CAACI,MAAM,CAAC;EACzB;EAEA,IAAIV,MAAM,GAAGH,eAAe,CAACQ,KAAK,CAAC;EAEnC,oBACIT,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAIgB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAEP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC5CpB,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACnBf,OAAA,CAACF,WAAW;QAACa,OAAO,EAAEA,OAAQ;QAACU,aAAa,EAAER;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,eACNpB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAC1BX,MAAM,CAACkB,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK,kBACpBvB,OAAA;QAAKgB,SAAS,EAAC,OAAO;QAAAD,QAAA,gBAClBf,OAAA;UAAKwB,GAAG,EAAEC,KAAK,CAACpB,GAAI;UAACqB,GAAG,EAAED,KAAK,CAACpB;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACvCpB,OAAA;UAAKgB,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA,GAFdG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAACO,EAAA,GA7BIrB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}