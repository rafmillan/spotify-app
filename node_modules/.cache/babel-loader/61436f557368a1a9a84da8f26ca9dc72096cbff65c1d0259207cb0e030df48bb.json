{"ast":null,"code":"import axios from \"axios\";\nexport const fetchUser = (token, setter) => {\n  axios.get(\"https://api.spotify.com/v1/me\", {\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    setter(response.data);\n  }).catch(err => console.log(err));\n};\nexport const fetchUserPfp = (token, setter) => {\n  axios.get(\"https://api.spotify.com/v1/me\", {\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    setter(response.data.user);\n  }).catch(err => console.log(err));\n};\nexport const fetchTopSongs = (token, count, setter, timeRange) => {\n  axios.get(\"https://api.spotify.com/v1/me/top/tracks\", {\n    params: {\n      limit: count,\n      time_range: timeRange\n    },\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    setter(response.data.items);\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["axios","fetchUser","token","setter","get","headers","Accept","Authorization","then","response","data","catch","err","console","log","fetchUserPfp","user","fetchTopSongs","count","timeRange","params","limit","time_range","items"],"sources":["/Users/rafmillan/react/spotify-app/src/Api.js"],"sourcesContent":["import axios from \"axios\"\n\nexport const fetchUser = (token, setter) =>  {\n    axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            \n        }\n    }).then(response => {\n        setter(response.data)\n    }).catch((err) => console.log(err))\n}\n\nexport const fetchUserPfp = (token, setter) =>  {\n    axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            \n        }\n    }).then(response => {\n        setter(response.data.user)\n    }).catch((err) => console.log(err))\n}\n\nexport const fetchTopSongs = (token, count, setter, timeRange) => {\n    axios.get(\"https://api.spotify.com/v1/me/top/tracks\", {\n        params:{\n            limit: count,\n            time_range: timeRange\n        },\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => {\n        setter(response.data.items)\n    }).catch(((err) => console.log(err)))\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAM;EACzCH,KAAK,CAACI,GAAG,CAAC,+BAA+B,EAAE;IACvCC,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAG,UAASL,KAAM,EAAC;MAChC,cAAc,EAAE;IAEpB;EACJ,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;IAChBN,MAAM,CAACM,QAAQ,CAACC,IAAI,CAAC;EACzB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACvC,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAACb,KAAK,EAAEC,MAAM,KAAM;EAC5CH,KAAK,CAACI,GAAG,CAAC,+BAA+B,EAAE;IACvCC,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAG,UAASL,KAAM,EAAC;MAChC,cAAc,EAAE;IAEpB;EACJ,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;IAChBN,MAAM,CAACM,QAAQ,CAACC,IAAI,CAACM,IAAI,CAAC;EAC9B,CAAC,CAAC,CAACL,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACvC,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAACf,KAAK,EAAEgB,KAAK,EAAEf,MAAM,EAAEgB,SAAS,KAAK;EAC9DnB,KAAK,CAACI,GAAG,CAAC,0CAA0C,EAAE;IAClDgB,MAAM,EAAC;MACHC,KAAK,EAAEH,KAAK;MACZI,UAAU,EAAEH;IAChB,CAAC;IACDd,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAG,UAASL,KAAM,EAAC;MAChC,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;IAChBN,MAAM,CAACM,QAAQ,CAACC,IAAI,CAACa,KAAK,CAAC;EAC/B,CAAC,CAAC,CAACZ,KAAK,CAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAE;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}